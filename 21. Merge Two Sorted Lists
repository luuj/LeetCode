/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode head = null;
        ListNode currLeft = l1;
        ListNode currRight = l2;
        
        if (l1 == null)
            return l2;
        else if (l2 == null)
            return l1;
        
        if (l1.val > l2.val){
            head = l2;
            currRight = l2.next;
        }
        else{
            head = l1;
            currLeft = l1.next;
        }
            
        ListNode currNode = head; 
        
        while (currLeft!=null || currRight!=null){
            if (currLeft == null){
                currNode.next = currRight;
                currNode = currNode.next;
                currRight = currRight.next;
            }
            else if (currRight == null){
                currNode.next = currLeft;
                currNode = currNode.next;
                currLeft = currLeft.next;
            }
            else if (currLeft.val < currRight.val){
                currNode.next = currLeft;
                currNode = currNode.next;
                currLeft = currLeft.next;
            }
            else{
                currNode.next = currRight;
                currNode = currNode.next;
                currRight = currRight.next;
            }
            
        }
        
        return head;
    }
}
